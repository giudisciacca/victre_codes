function [filename,seed] = randomizeCFG_mass(stri, seed)

if ~exist('seed','var') || isempty(seed)
        seed = randi(1e6);
end

stri = 'PROVA';
%% mass
 
lMax = 4+randi(3);
alpha = 6 + 7.5 *rand; 

meanSigma2 = 0.2+ 0.3 *rand;
stdSigma2 = 0.04*rand;
powerLaw = 2+rand*6;
meanLF =500 + 200*rand;
stdLF = 50 + 40* rand;
meanShape = 0.2+0.3*rand;
stdShape = 03+0.5*rand;
meanLFRad = 0.1+0.2* rand;
stdLFRad = 0.03+0.1*rand;
meanLFLen = 0.05+0.2*rand;
stdLFLen = 0.01 + 0.02 * rand;
meanFuzzAlpha = 0.01+ 0.01*rand;
stdFuzzAlpha = 0.02*rand;
%spicule
meanInitial = 0;
stdInitial = 250+randi(200);
meanNeigh = 5+5*rand;
stdNeigh = 0.5+2*rand;
meanInitRad = 0.001+0.002*rand;
stdInitRad = 0.0005+0.0005*rand;
meanRadDec = 0.05+0.4*rand;
stdRadDec = 0.2+0.2*rand;
meanInitLen = 0.1+0.3*rand;
stdInitLen = 0.01+0.02*rand;
meanLenDec = 0.5+0.45*rand;
stdLenDec = 0.10+0.2*rand;
meanContProb = 0.5+0.4*rand;
stdContProb = 0.02+0.04*rand;
meanBranchAng = 5+4*rand;
stdBranchAng = 0.4+0.4*rand;

whole_val = [lMax;alpha;meanSigma2;stdSigma2;powerLaw;meanLF;stdLF;meanShape;stdShape;
meanLFRad;stdLFRad;meanLFLen;stdLFLen;meanFuzzAlpha;stdFuzzAlpha;meanInitial;
stdInitial;meanNeigh;stdNeigh;meanInitRad;stdInitRad;meanRadDec;stdRadDec;
meanInitLen;stdInitLen;meanLenDec;stdLenDec ;meanContProb;stdContProb;meanBranchAng;stdBranchAng;];
string = sprintf(['# mass configuration file \n',...
    '[base]\n',...
    '#voxel size (mm)\n',...
    'imgRes=0.5\n',...
    '# random number seed (unsigned int) from /dev/urandom if unspecified\n',...
    'seed=%d\n',...
    '[mass]\n',...
    '# maximum spherical harmonic order\n',...
    'lMax=%g\n',...
    '# mean mass radius (mm)\n',...
    'alpha=%g\n',...
    '# mean mass surface irregularity variance (mm^2)\n',...
    'meanSigma2=%g\n',...
    '# mass surface irregularity standard deviation (mm^2)\n',...
    'stdSigma2=%g\n',...
    '# covariance power law index\n',...
    'powerLaw=%g\n',...
    '# mean number of low freq. modifications\n',...
    'meanLF=%g\n',...
    '# std. deviation of number of low freq. modifications\n',...
    'stdLF=%g\n',...
    '# mean LF shape distribution 0=spike, 1=bump\n',...
    'meanShape=%g\n',...
    '# std. deviation of LF shape 0=spike, 1=bump\n',...
    'stdShape=%g\n',...
    '# mean relative LF radius\n',...
    'meanLFRad=%g\n',...
    '# std. deviation of LF radius\n',...
    'stdLFRad=%g\n',...
    '# mean relative LF length\n',...
    'meanLFLen=%g\n',...
    '# std. deviation of LF length\n',...
    'stdLFLen=%g\n',...
    '# mean fuzzy alpha\n',...
    'meanFuzzAlpha=%g\n',...
    '# std. deviation of fuzzy alpha\n',...
    'stdFuzzAlpha=%g\n',...
    '[spicule]\n',...
    '# mean number of initial segments\n',...
    'meanInitial=%g\n',...
    '# std. deviation number of initial segments\n',...
    'stdInitial=%g\n',...
    '# mean max number of neighbor segments\n',...
    'meanNeigh=%g\n',...
    '# std. deviation max number of neighbor segments\n',...
    'stdNeigh=%g\n',...
    '# mean initial relative radius\n',...
    'meanInitRad=%g\n',...
    '# std. deviation initial relative radius\n',...
    'stdInitRad=%g\n',...
    '# mean radius decrease\n',...
    'meanRadDec=%g\n',...
    '# std. deviation radius decrease\n',...
    'stdRadDec=%g\n',...
    '# mean initial relative radius\n',...
    'meanInitLen=%g\n',...
    '# std. deviation initial relative radius\n',...
    'stdInitLen=%g\n',...
    '# mean length decrease\n',...
    'meanLenDec=%g\n',...
    '# std. deviation length decrease\n',...
    'stdLenDec=%g\n',...
    '# mean continue prob\n',...
    'meanContProb=%g\n',...
    '# std. deviation continue prob\n',...
    'stdContProb=%g\n',...
    '# mean branch angle\n',...
    'meanBranchAng=%g\n',...
    '# std. deviation branch angle\n',...
    'stdBranchAng=%g\n'],...
   seed,whole_val);
fileID = fopen(['mass_',num2str(seed), '.cfg'], 'w');
fprintf(fileID,string);
fclose(fileID);
filename = ['mass_',num2str(seed), '.cfg']

end